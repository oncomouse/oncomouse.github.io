/*
 * jQuery Plugin to fade an element from visible to invisible as the user scrolls past it.
 *
 * If the element has children, fade the children instead of the element itself (this keeps
 * the background from fading, if you have set it).
 *
 * If .fadeScroll() gets called on the child of an element that has already been seen,
 * the function will return without attaching a new event.
 *
 * Usage:
 *
 * $('#element').fadeScroll({
 *   fadeChildren: true/false // Turn on or off fade children instead of just element.
 *   fadeSeen: true/false // Apply different fades to children of elements we've already seen.
 *   fadeMove: true/false // When fadeChildren is true, will also move the content relative to the viewport, Medium style.
 * });
 *
 * (parameter hash is optional; defaults are true and false, respectively).
 *
 * Dependencies:
 *
 * - jQuery
 * - jQuery.transform (http://louisremi.github.io/jquery.transform.js/) (optional)
 */


(function( $ ) {
	$.fn.fadeScroll = function(options) {
		var difference,
			$this = this,
			settings = $.extend({
				seenPropName: 'fadescroll-seen',
				fadeChildren: true,
				fadeSeen: false,
				fadeMove: true
			}, options );
		
		if(settings.fadeSeen) {
			if ($this.prop(settings.seenPropName)) { return; }
		}

		if(settings.fadeChildren && settings.fadeSeen) {
			$this.children().prop(settings.seenPropName, true);
		}
		
		if(settings.fadeChildren && settings.fadeMove) {
			difference = $this.outerHeight(true) + $this.offset().top - ($this.children().last().offset().top + $this.children().last().height());
		}
		
		$(window).on('scroll.fadeScroll' + $this.selector, function() {
			var height, fade;
			
			height = $this.outerHeight(true) + $this.offset().top;
			fade = (height-$(document).scrollTop()) / height;
			
			if (fade < 0) { fade = 0.0; } else if(fade > 1) { fade = 1.0; }
			
			if(settings.fadeChildren) {
				if($this.children().length > 0 ){
					$this.children().fadeTo(0, fade);
					if(settings.fadeMove && difference > 0) {
						$this.children().css({transform: "translateY(" + (difference * (1 - fade)) + "px)"});
					}
				} else {
					$this.fadeTo(0, fade);
				}
			} else {
				$this.fadeTo(0, fade);
			}
		}).scroll();

		return this;
	};
	
	$.fn.removeFadeScroll = function(options) {
		window.off('scroll.fadeScroll' + this.selector);
	};
}( jQuery ));
